// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/gunnermanx/simplegameserver/auth (interfaces: AuthProvider)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAuthProvider is a mock of AuthProvider interface.
type MockAuthProvider struct {
	ctrl     *gomock.Controller
	recorder *MockAuthProviderMockRecorder
}

// MockAuthProviderMockRecorder is the mock recorder for MockAuthProvider.
type MockAuthProviderMockRecorder struct {
	mock *MockAuthProvider
}

// NewMockAuthProvider creates a new mock instance.
func NewMockAuthProvider(ctrl *gomock.Controller) *MockAuthProvider {
	mock := &MockAuthProvider{ctrl: ctrl}
	mock.recorder = &MockAuthProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuthProvider) EXPECT() *MockAuthProviderMockRecorder {
	return m.recorder
}

// AuthenticateRequest mocks base method.
func (m *MockAuthProvider) AuthenticateRequest(arg0 context.Context, arg1 *http.Request) (context.Context, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AuthenticateRequest", arg0, arg1)
	ret0, _ := ret[0].(context.Context)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AuthenticateRequest indicates an expected call of AuthenticateRequest.
func (mr *MockAuthProviderMockRecorder) AuthenticateRequest(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AuthenticateRequest", reflect.TypeOf((*MockAuthProvider)(nil).AuthenticateRequest), arg0, arg1)
}

// GetUIDFromRequest mocks base method.
func (m *MockAuthProvider) GetUIDFromRequest(arg0 *http.Request) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetUIDFromRequest", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetUIDFromRequest indicates an expected call of GetUIDFromRequest.
func (mr *MockAuthProviderMockRecorder) GetUIDFromRequest(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetUIDFromRequest", reflect.TypeOf((*MockAuthProvider)(nil).GetUIDFromRequest), arg0)
}
